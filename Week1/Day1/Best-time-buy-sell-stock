//Time complexity - O(N)
//currp-current profit
//initially assume buying on day 1 and change if you find any other days cost less than day 1


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int currp=0,buy=prices[0];

        for(int i=1;i<prices.size();i++){
            if(prices[i]<buy){
                buy=prices[i];
            }
            else{
                currp=max(currp,prices[i]-buy);
            }
        }

        return currp;
    }
};
